jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      sudo apt-get -qq update
      sudo apt-get install -y curl wget nasm make gcc g++ build-essential qemu-system-x86
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
      export PATH=$PATH:~/.cargo/bin
      cargo install cargo-xbuild
      rustup component add rust-src
      rustup component add llvm-tools-preview
      cargo install bootimage
      make
      make qemu
      lscpu
    displayName: 'Test eduOS-rs on Ubuntu 16.04'
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
      export PATH=$PATH:$HOME/.cargo/bin
      cargo install cargo-xbuild
      rustup component add rust-src
      rustup component add llvm-tools-preview
      cargo install bootimage
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      brew update
      brew install qemu
      make
      make qemu
    displayName: 'Test eduOS-rs on macOS'
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - powershell: |
      Invoke-WebRequest -OutFile rustup-init.exe https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe
      ./rustup-init.exe -y --default-toolchain nightly | Out-Null
      Invoke-WebRequest -OutFile qemu-w64-setup.exe https://qemu.weilnetz.de/w64/qemu-w64-setup-20190815.exe
      ./qemu-w64-setup.exe /quiet
      $env:Path += ";" + $env:UserProfile + "\.cargo\bin" + ";C:\Program File\qemu"
      cargo install cargo-xbuild
      rustup component add rust-src
      rustup component add llvm-tools-preview
      cargo install bootimage
      bootimage build --target x86_64-eduos.json
      bootimage run --target x86_64-eduos.json
      Remove-Item -Path "rustup-init.exe"
      Remove-Item -Path "qemu-w64-setup.exe"
    displayName: 'Test eduOS-rs on Windows'

